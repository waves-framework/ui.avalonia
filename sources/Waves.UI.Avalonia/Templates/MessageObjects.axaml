<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    xmlns:presentation="clr-namespace:Waves.UI.Presentation.Tabs.Interfaces;assembly=Waves.UI"
                    xmlns:interfaces="clr-namespace:Waves.Core.Base.Interfaces;assembly=Waves.Core.Base"
                    xmlns:enums="clr-namespace:Waves.Core.Base.Enums;assembly=Waves.Core.Base"
                    xmlns:base="clr-namespace:Waves.Core.Base;assembly=Waves.Core.Base">

  <ResourceDictionary.MergedDictionaries>

    <!-- Message -->
    <ResourceInclude Source="avares://Waves.UI.Avalonia/Templates/Message.axaml" />

  </ResourceDictionary.MergedDictionaries>

  <!-- Separator -->
  <DataTemplate x:Key="MessageSeparatorDataTemplate" DataType="{x:Type base:MessageSeparator}">

    <Border Height="2" Margin="0,0,0,18" Background="{DynamicResource Primary-300-Brush}"/>

  </DataTemplate>

  <!-- Group -->
  <DataTemplate  x:Key="MessageGroupDataTemplate" DataType="{x:Type base:MessageGroup}">

    <Grid Margin="0,0,0,18">

      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="12"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Grid>

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="16" />
          <ColumnDefinition Width="12" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="6" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="12" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="12" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!-- Icon -->
        <Grid Grid.Column="0" VerticalAlignment="Top">

          <!--<Viewbox Height="16" Width="16" Stretch="Uniform" Margin="0,2,0,0">

            <Path>

              <Path.Style>

                <Style TargetType="{x:Type Path}">

                  <Style.Triggers>

                    <DataTrigger Binding="{Binding Type}"
                             Value="{x:Static enums:MessageType.Information}">
                      <Setter Property="Fill" Value="{DynamicResource Primary-Foreground-100-Brush}" />
                      <Setter Property="Data" Value="{StaticResource Icon-Information}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Warning}">
                      <Setter Property="Fill" Value="{DynamicResource Warning-Brush}" />
                      <Setter Property="Data" Value="{StaticResource Icon-Warning}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Error}">
                      <Setter Property="Fill" Value="{DynamicResource Error-Brush}" />
                      <Setter Property="Data" Value="{StaticResource Icon-Error}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Fatal}">
                      <Setter Property="Fill" Value="{DynamicResource Fatal-Brush}" />
                      <Setter Property="Data" Value="{StaticResource Icon-Fatal}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Debug}">
                      <Setter Property="Fill" Value="{DynamicResource Primary-Foreground-500-Brush}" />
                      <Setter Property="Data" Value="{StaticResource Icon-Debug}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Success}">
                      <Setter Property="Fill" Value="{DynamicResource Success-Brush}" />
                      <Setter Property="Data" Value="{StaticResource Icon-Success}" />
                    </DataTrigger>

                  </Style.Triggers>

                </Style>

              </Path.Style>

            </Path>

          </Viewbox>-->

        </Grid>

        <!-- Datetime -->
        <Grid Grid.Column="2" VerticalAlignment="Top">

          <Border BorderBrush="{DynamicResource Primary-500-Brush}" BorderThickness="1" CornerRadius="6">

            <!--<Border.Style>

              <Style TargetType="{x:Type Border}" >

                <Style.Triggers>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Information}">
                    <Setter Property="Background" Value="{DynamicResource Primary-300-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Warning}">
                    <Setter Property="Background" Value="{DynamicResource Warning-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Error}">
                    <Setter Property="Background" Value="{DynamicResource Error-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Fatal}">
                    <Setter Property="Background" Value="{DynamicResource Fatal-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Debug}">
                    <Setter Property="Background" Value="{DynamicResource Primary-100-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Success}">
                    <Setter Property="Background" Value="{DynamicResource Success-Brush}" />
                  </DataTrigger>

                </Style.Triggers>

              </Style>

            </Border.Style>-->

          </Border>

          <TextBlock Text="{Binding DateTime, StringFormat='{}{0:HH:mm dd.MM.yyyy}'}" VerticalAlignment="Center" Margin="{StaticResource SmallThickness}">

            <!--<TextBlock.Style>

              <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Header3}">

                <Style.Triggers>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Information}">
                    <Setter Property="Foreground"
                        Value="{DynamicResource Primary-Foreground-100-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Warning}">
                    <Setter Property="Foreground" Value="{DynamicResource Warning-Foreground-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Error}">
                    <Setter Property="Foreground" Value="{DynamicResource Error-Foreground-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Fatal}">
                    <Setter Property="Foreground" Value="{DynamicResource Fatal-Foreground-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Debug}">
                    <Setter Property="Foreground"
                        Value="{DynamicResource Primary-Foreground-500-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Success}">
                    <Setter Property="Foreground" Value="{DynamicResource Success-Foreground-Brush}" />
                  </DataTrigger>

                </Style.Triggers>

              </Style>

            </TextBlock.Style>-->

          </TextBlock>

        </Grid>

        <!-- Sender -->
        <Grid Grid.Column="4" Margin="0,0,-1,0" VerticalAlignment="Top">

          <Border CornerRadius="{StaticResource StandardCornerRadius}">

            <!--<Border.Style>

              <Style TargetType="{x:Type Border}" >

                <Style.Triggers>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Information}">
                    <Setter Property="Background"
                        Value="{DynamicResource Primary-300-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Warning}">
                    <Setter Property="Background" Value="{DynamicResource Warning-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Error}">
                    <Setter Property="Background" Value="{DynamicResource Error-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Fatal}">
                    <Setter Property="Background" Value="{DynamicResource Fatal-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Debug}">
                    <Setter Property="Background"
                        Value="{DynamicResource Primary-100-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Success}">
                    <Setter Property="Background" Value="{DynamicResource Success-Brush}" />
                  </DataTrigger>

                </Style.Triggers>

              </Style>

            </Border.Style>-->

          </Border>

          <Border BorderBrush="{DynamicResource Primary-500-Brush}" BorderThickness="1" CornerRadius="{StaticResource StandardCornerRadius}"/>

          <Grid Margin="{StaticResource SmallThickness}">

            <TextBlock Text="{Binding Sender}"  VerticalAlignment="Center" Margin="0,0,0,0">

              <!--<TextBlock.Style>

                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Header3}">

                  <Style.Triggers>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Information}">
                      <Setter Property="Foreground"
                      Value="{DynamicResource Primary-Foreground-100-Brush}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Warning}">
                      <Setter Property="Foreground" Value="{DynamicResource Warning-Foreground-Brush}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Error}">
                      <Setter Property="Foreground" Value="{DynamicResource Error-Foreground-Brush}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Fatal}">
                      <Setter Property="Foreground" Value="{DynamicResource Fatal-Foreground-Brush}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Debug}">
                      <Setter Property="Foreground"
                      Value="{DynamicResource Primary-Foreground-500-Brush}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Success}">
                      <Setter Property="Foreground" Value="{DynamicResource Success-Foreground-Brush}" />
                    </DataTrigger>

                  </Style.Triggers>

                </Style>

              </TextBlock.Style>-->

            </TextBlock>

          </Grid>

        </Grid>

        <Grid Grid.Column="6">

          <TextBlock Classes="Regular2"
                     Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type TemplatedControl}}}"
                     Text="{Binding Messages.Count, StringFormat={}Grouped from {0} messages.}"
                     VerticalAlignment="Center"/>

        </Grid>

        <!-- Expand button -->
        <!--<Grid Grid.Column="8">

                    <Button>

                        <Grid Margin="12,0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="9"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0">

                                <Viewbox Height="14" Width="14" Stretch="Uniform" Margin="0,-6,0,0">

                                    <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type UIElement}}}" Data="M7.4296875 9.5L5.9296875 11L12 17.070312L18.070312 11L16.570312 9.5L12 14.070312L7.4296875 9.5 z"/>

                                </Viewbox>

                            </Grid>

                            <Grid Grid.Column="2">

                                <TextBlock Style="{StaticResource Regular1}" Foreground="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type UIElement}}}" Text="Expand"/>

                            </Grid>

                        </Grid>

                    </Button>

                </Grid>-->

      </Grid>

      <Grid Grid.Row="2" Margin="0,0,0,0">

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="28"/>
          <ColumnDefinition Width="2"/>
          <ColumnDefinition Width="12"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="1">

          <Border>

            <!--<Border.Style>

              <Style TargetType="{x:Type Border}" >

                <Style.Triggers>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Information}">
                    <Setter Property="Background"
                        Value="{DynamicResource Primary-500-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Warning}">
                    <Setter Property="Background" Value="{DynamicResource Warning-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Error}">
                    <Setter Property="Background" Value="{DynamicResource Error-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Fatal}">
                    <Setter Property="Background" Value="{DynamicResource Fatal-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Debug}">
                    <Setter Property="Background"
                        Value="{DynamicResource Primary-100-Brush}" />
                  </DataTrigger>

                  <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:MessageType.Success}">
                    <Setter Property="Background" Value="{DynamicResource Success-Brush}" />
                  </DataTrigger>

                </Style.Triggers>

              </Style>

            </Border.Style>-->

          </Border>

        </Grid>

        <Grid Grid.Column="3">

          <StackPanel>

            <!-- Title -->
            <TextBlock Text="{Binding Title}" Classes="Header2" Margin="0,0,0,7"/>

            <!-- Inner messages -->
            <ItemsControl Items="{Binding Messages}"
                          ItemTemplate="{StaticResource MessageItemListDataTemplate}">

              <ItemsControl.ItemsPanel>

                <ItemsPanelTemplate>
                  <StackPanel/>
                </ItemsPanelTemplate>

              </ItemsControl.ItemsPanel>

            </ItemsControl>

          </StackPanel>

        </Grid>

      </Grid>

    </Grid>

  </DataTemplate>

  
</ResourceDictionary>